on: [pull_request]

name: Continuous integration

jobs:
  analyze:
    name: Dusk Analyzer
    runs-on: core
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --git https://github.com/dusk-network/cargo-dusk-analyzer
      - uses: actions-rs/cargo@v1
        with:
          command: dusk-analyzer

  test_nightly:
    name: Nightly tests
    runs-on: core
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
      - run: rustup component add rustfmt
      - run: rustup target add wasm32-unknown-unknown
      - run: >
          RUSK_PROFILE_PATH="/var/opt/build-cache"
          RUSK_KEEP_KEYS="1"
          RUSK_BUILD_STATE="1"
          RUSK_FORCE_STATE="1"
          make test
      # - name: "Clippy check release"
      #   uses: actions-rs/clippy-check@v1
      #   env:
      #     RUSK_PROFILE_PATH: "/var/opt/build-cache"
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     args: --all-features --release -- -D warnings -A clippy::derive_partial_eq_without_eq
      - name: "Upload Rusk Artifact"
        uses: actions/upload-artifact@v2
        with:
          name: rusk-artifact
          path: ./target/release/rusk
          retention-days: 5
  fmt:
    name: Rustfmt
    runs-on: core
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
