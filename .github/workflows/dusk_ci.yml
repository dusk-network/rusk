on: [pull_request]

name: Continuous integration

jobs:
  analyze:
    name: Dusk Analyzer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --git https://github.com/dusk-network/cargo-dusk-analyzer
      - uses: actions-rs/cargo@v1
        with:
          command: dusk-analyzer

  test_nightly:
    name: Nightly tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache .rusk profile
        uses: actions/cache@v2
        env:
          cache-name: cache-rusk-profile
        with:
          path: ~/.rusk
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache deps
        uses: actions/cache@v2
        with:
          path: |-
            .cargo_home
            target/*/.*
            target/*/build
            target/*/deps
          key: ${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - run: rustup component add rustfmt
      - run: rustup target add wasm32-unknown-unknown
      - run: make test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
