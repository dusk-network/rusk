name: Compile CLI wallet binaries

on:
  workflow_dispatch:
    inputs:
      dusk_blockchain_ref:
        description: "GIT branch, ref, or SHA to checkout"
        required: true
        default: "master"

defaults:
  run:
    shell: bash

jobs:
  build_and_publish:
    name: Build rusk-wallet binaries for ${{ matrix.os }} with ${{ matrix.compiler }}.
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-latest, macos-15, windows-latest, arm-linux]
        compiler: [cargo]
        include:
          - os: ubuntu-24.04
            target: linux-x64
          - os: arm-linux
            target: linux-arm64
            flags: --target=aarch64-unknown-linux-gnu
            platform: aarch64-unknown-linux-gnu
          - os: macos-latest
            target: macos-intel
          - os: macos-15
            target: macos-arm64
            flags: --target=aarch64-apple-darwin
            platform: aarch64-apple-darwin
          - os: windows-latest
            target: windows-x64

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.dusk_blockchain_ref }}

      - name: Install dependencies
        uses: dsherret/rust-toolchain-file@v1

      - name: Add arm target for Apple Silicon build
        run: rustup target add aarch64-apple-darwin
        if: ${{ matrix.os == 'macos-15' }}

      - name: Build Rusk Wallet
        shell: bash
        working-directory: ./rusk-wallet
        run: cargo build --release --verbose ${{matrix.flags}}

      - name: Get semver from wallet binary
        run: |
          export SEMVER=$(cargo pkgid --manifest-path ./rusk-wallet/Cargo.toml | sed -E 's/.*#([0-9]+\.[0-9]+\.[0-9]+).*/\1/')
          echo "SEMVER=$SEMVER" >> $GITHUB_ENV

      - name: "Pack binaries"
        run: |
          mkdir rusk-wallet-${{env.SEMVER}}-${{matrix.target}}
          mv target/${{matrix.platform}}/release/rusk-wallet rusk-wallet-${{env.SEMVER}}-${{matrix.target}}
          cp ./rusk-wallet/CHANGELOG.md rusk-wallet-${{env.SEMVER}}-${{matrix.target}}
          cp ./rusk-wallet/README.md rusk-wallet-${{env.SEMVER}}-${{matrix.target}}
          tar -czvf rusk-wallet-${{env.SEMVER}}-${{matrix.target}}.tar.gz rusk-wallet-${{env.SEMVER}}-${{matrix.target}}
          ls -la *.gz

      - name: Upload Wallet Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rusk-wallet-${{ env.SEMVER }}-${{ matrix.target }}
          path: ./rusk-wallet-${{ env.SEMVER }}-${{ matrix.target }}.tar.gz
          retention-days: 5
