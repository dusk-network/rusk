syntax = "proto3";
package rusk;
option go_package = "github.com/dusk-network/rusk-schema;rusk";

message GenerateScoreRequest {
    bytes k = 1; // BlsScalar
    bytes seed = 2; // BlsScalar
    bytes secret = 3; // JubJubCompressed 
    uint32 round = 4;
    uint32 step = 5;
    uint64 index_stored_bid = 6;
}

message GenerateScoreResponse {
    bytes blindbid_proof = 1;
    bytes score = 2; // BlsScalar
    bytes prover_identity = 4; // BlsScalar
}

message VerifyScoreRequest {
    bytes proof = 1;
    bytes score = 2; // BlsScalar
    bytes seed = 3; // BlsScalar
    bytes prover_id = 4; // BlsScalar
    fixed64 round = 5;
    uint32 step = 6;
    uint64 index_stored_bid = 7;
}

message VerifyScoreResponse {
    bool success = 1;
}

service BlindBidService {
    // Generate a proof of blind bid, and a score.
    rpc GenerateScore(GenerateScoreRequest) returns (GenerateScoreResponse) {}
    // Verify a proof of blind bid, and the associated score.
    rpc VerifyScore(VerifyScoreRequest) returns (VerifyScoreResponse) {}
}
