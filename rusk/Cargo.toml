[package]
name = "dusk-rusk"
version = "1.1.0-rc.2"
edition = "2021"
autobins = false

description = "Rusk is the Dusk Network node implementation"
repository = "https://github.com/dusk-network/rusk"
categories = ["cryptography", "cryptography::cryptocurrencies"]
keywords = ["dusk", "cryptocurrency", "blockchain", "node"]
license = "MPL-2.0"


[lib]
name = "rusk"
path = "src/lib/lib.rs"

[[bin]]
name = "rusk"
path = "src/bin/main.rs"

[dependencies]
tokio = { workspace = true, features = ["rt-multi-thread", "fs", "macros"] }
futures-util = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = [
    "fmt",
    "env-filter",
    "json",
] }
clap = { workspace = true, features = ["env", "string", "derive"] }
semver = { workspace = true }
anyhow = { workspace = true }
rustc_tools_util = { workspace = true }
rand = { workspace = true }
toml = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
serde_with = { workspace = true, features = ["hex"] }
humantime-serde = { workspace = true }
bs58 = { workspace = true }
base64 = { workspace = true }
hex = { workspace = true }
parking_lot = { workspace = true }
rkyv = { workspace = true, features = ["size_32"] }
bytecheck = { workspace = true }
dirs = { workspace = true }
blake3 = { workspace = true }
blake2b_simd = { workspace = true }

sha3 = { workspace = true }
dusk-bytes = { workspace = true }
kadcast = { workspace = true }
pin-project = { workspace = true }
tungstenite = { workspace = true }
hyper-tungstenite = { workspace = true }
hyper = { workspace = true, features = ["server", "http1", "http2"] }
hyper-util = { workspace = true, features = ["server", "http1", "http2"] }
http-body-util = { workspace = true }

tokio-stream = { workspace = true, features = ["sync"] }
tokio-util = { workspace = true, features = ["rt"] }
tokio-rustls = { workspace = true }
rustls-pemfile = { workspace = true }
async-trait = { workspace = true }

dusk-core = { workspace = true, features = ["zk"] }
dusk-vm = { workspace = true }
rusk-profile = { workspace = true }
rusk-prover = { workspace = true, features = ["std"], optional = true }

## node dependencies
node = { workspace = true, optional = true }
dusk-consensus = { workspace = true, optional = true }
node-data = { workspace = true, optional = true }


## GraphQL deps
async-graphql = { workspace = true }

## RUES deps
reqwest = { workspace = true }

## Ephemeral dependencies
tempfile = { workspace = true, optional = true }
rusk-recovery = { workspace = true, optional = true }

## testwallet dependencies
futures = { workspace = true, optional = true }

[dev-dependencies]
wallet-core = { workspace = true }
zeroize = { workspace = true, features = ["derive"] }
rusk-recovery = { workspace = true, features = ["state"] }
ff = { workspace = true }
rusk-prover = { workspace = true, features = ["no_random", "debug"] }
criterion = { workspace = true }

[build-dependencies]
rustc_tools_util = { workspace = true }

[features]
default = [
    "ephemeral",
    "recovery-state",
    "recovery-keys",
    "prover",
    "chain",
    "http-wasm",
]
ephemeral = ["dep:rusk-recovery", "dep:tempfile", "recovery-state", "chain"]
recovery-state = ["rusk-recovery/state", "dep:tempfile"]
recovery-keys = ["rusk-recovery/keys"]
prover = ["dep:rusk-prover"]
testwallet = ["dep:futures"]
chain = ["dep:node", "dep:dusk-consensus", "dep:node-data"]
archive = ["chain", "node/archive"]
network-trace = ["node/network-trace"]
http-wasm = []

[[bench]]
name = "block_ingestion"
harness = false
required-features = ["testwallet"]
